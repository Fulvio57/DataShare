# For complete documentation of this file, please see Geany's main documentation
[styling=FreeBasic]


[keywords]
# all items must be in one line
keywords=fabs sdec7 pin_g14 pin_io7 select ishex3 toggle hserin5 ptr64 isbin9 branch rcin bin25 sbin5 hpwm hbusin2 dsqr long sbin29 pin_a12 byte1 hserin2 print circle mid$ isbin10 debug pin_j1 hrsoutln isdec7 end pin_a9 idec1 digitalwrite pin_a4 hseroutln hserout1 pin_io4 code cread endsub idec3 edata dec0 hex1 ibin15 lowsbyte pin_h12 word0 pin_d5 pin_b4 pin_io2 hrsout4ln ibin10 wait pin_b5 elseif shex8 hex sbyte_array_ptr lcdwrite pin_e10 pin_a0 ibin27 toshiba hserout3 lcdread pin_e14 toshiba_command ks0108 pin_d1 pin_g2 declare pin_e5 branchl pin_h3 xin hex5 hbusin ldata pin_d2 ihex5 bin19 lookdownl pin_c15 isr- ptr32 clear rsoutln isbin19 sdec0 pin_d3 hex7 sizeof pin_d6 pin_h15 flash16 hbrestart owrite hserout isbin30 output snum16 str isbin24 config3 bin32 dcos pin_h7 hserout2 dec sbin23 pin_g9 busnack freqout pin_f9 pin_g15 pin_d7 right$ bin highsword code8 pin_f11 pin_l3 resume bound dec4 global bit25 idec2 string pinpullup sdec3 bit4 bit8 byref hrsout6ln if delayus usbout exitproc log10 sound xout pin_j6 lread32 pin_h4 varptr bit20 dlog10 hbstart3 gotol highsbyte sbin25 set bin4 byte0 line pin_d10 cdata byte isbin6 sbin12 sonyin pin_c7 sbin15 tolower bin10 byval highword sdec2 isdec1 on cread64 clearpin fround isbin16 hbusin1 pin_l4 len isbin dec3 pin_k0 shex3 isbin23 pin_a1 pin_a11 endselect codef ptr8 to sbyte2 num8 pin_d14 flash val digitalread isdec6 next pixel shex1 dlog pulsin pin_j4 symbol isbin17 hbusout pin_b12 bin26 dec2 goto ihex7 pin_j5 pin_l0 touch_hotspot ibin21 bstop pin_c10 hbusin3 dabs cr ceil pin_f5 ibin ihex2 dig sbin7 pin_b7 pin_g5 isbin8 bin6 pin_j0 touch_read rsin isbin2 rep word isdec9 pin_b1 pin_b3 pin_e1 bin27 pin_c6 while ibin28 bin5 bit16 pin_f7 ink pin_c11 pin_io1 sdec5 shex2 sbin19 sword1 sbin30 trimleft sdword_array_ptr dpow pinget sbin32 bin28 busin estr pin_b2 pin_g4 datan usbinit hrsout word2 ibin19 dword pin_c2 or result ihex sbin8 set_osccal dec8 idec8 hserial_changebaud cls hex8 isbin7 ibin12 bin9 bin16 ibin23 sword swap sword_array_ptr box repeat lread8 pin_h13 input pin_c13 lookup sdec1 crlf pow hbstart str$ bit26 float endisr- pin_e3 bit21 sbin18 include log i2cin ptr16 cursor isbin12 lread16 ibin31 bit config5 hserout6 ibin17 isbin21 isdec10 bit14 paper isdec2 ishex bin18 enable idec0 isbin31 coded sbin16 pin_d4 sound2 hrsout5ln isbin22 device sdec10 downto bin22 flash32 idec9 pin_f4 pin_j14 lookupl sbin9 sbin14 isdec5 pin_c14 sqr hbusout2 atan2 byte7 isbin29 pin_e12 cread24 hbstart2 ishex5 pin_e8 sbin ishex7 flash24 push pin_l2 ptr24 pin_a13 pin_c4 stop sbin31 hbusack2 sdword counter ishex2 pin_g12 pin_k2 lowsword touch_hotspottable modd pin_h0 auto inc hbstop3 highbyte setbit at hbusout3 sbyte1 button endproc pin_g10 pin_h2 eread oread acos pin_g8 dtan delayms lfcr ibin22 pin_j3 else snum8 byte4 word_array_ptr pin_a2 serout isdec4 sdec pin_h9 sbin13 trimright bin20 ibin25 floor samsung pot bin31 hedata then isbin20 pin_l6 ibin9 pinmode exp pin_c12 atan cread16 config4 hrsin1 pinclear sdec6 bin24 tan isbin13 hserout4 psvd font pin_e13 pin_f1 pin_h10 usbpoll abs tern bit19 cptr8 pin_f14 rc5in code24 asin lowword psv24 pin_c8 pin_b9 gosub getpin word3 pin_l5 seed bin23 delaycs disable dim brestart sbin1 psv_addressof touch_active isbin4 toshiba_udg setpin ihex8 left$ hrsout1ln sdec4 cerase pin_b15 hrsin2 pin_c3 isr pin_g1 pin_j11 ror pin_a15 bit11 pinoutput cos hbstop isbin28 clearbit pin_f13 pin_h1 sbin26 hex3 let org byte6 ishex1 pin_d9 addressof call pin_d15 pin_e7 psv8 hrsin3 flash8 pin_f15 modf config sbyte0 loadbit snum32 bin21 label pin_h8 bit30 pin_b6 pin_f0 usbin pin_d11 hrsout1 ibin7 idec6 flashd step ibin6 pulseout code16 plot bit27 bit0 pin_e4 hbusnack3 endif hrsout3 pwm bit12 hrsout2 bit10 and bit15 alphanumeric bit5 otherwise pin_io3 unplot isbin27 rol ibin2 bin29 isbin14 inverse cptr24 dword_array_ptr pin_g6 psv isbin26 rsout case cptr64 static bit1 sbin28 byte_array_ptr idec4 sleep double dec1 isqr sin pin_b14 pin_d0 until sword0 hbusnack2 pin_a3 pin_j13 dcd bin7 toupper word1 isr_start trim bit18 bit29 sdec8 servo pin_j7 sbin6 bit9 bit7 byte3 pin_c1 bin8 datan2 ewrite sizeof_table lookdown pin_e11 do pin_f12 sbin3 pin_a14 hserin pin_c9 shin div32 pin_k4 pin_a5 ihex6 bin12 pin_d12 save- snooze ibin4 dsin idec7 pin_a10 hrsout4 bin14 getbit high pin_e9 bin15 pin_a6 sbin2 shex6 pin_b13 pin_f3 random isbin18 bit24 pin_g0 ishex6 bin17 pin_c0 dfloor hbusout1 bstart hrsout6 pin_l1 lowbyte context hserin1 idec10 dec5 num32 pin_e6 dtmfout pin_g13 ibin26 isbin25 ibin3 shex7 pin_f8 cptr32 pin_io6 hserin3 dasin isbin5 bit17 bin3 ibin13 hbusack3 sbin20 pin_j2 sbin27 exitsub hex6 pin_j10 cf_write pininput sbin10 lineto adin pulsout hbrestart2 isdec pin_e15 pin_io5 pinlow loop pin_b10 ihex1 pin_k5 proc sbin22 bin2 endisr wend pin_e2 icos pin_c5 ibin18 flashf bit23 hrsin dec7 hex2 hserial1_changebaud pin_h11 bit13 psvf hbusnack ihex3 ibin24 serin shex4 num16 upto isbin3 break ibin1 shared pin_l7 byte5 dec9 ibin30 config1 byte2 dacos pin_h5 otherwiseif hbstop2 pin_a8 save cread8 dexp hex4 ishex8 shex5 hserial3_changebaud pinhigh sbyte3 hbusack cread32 hrsin4 isbin1 cf_init sbin11 idec5 ibin8 bit31 pin_j8 isdec8 pin pin_g3 pin_d8 ibin16 pin_io0 ishex4 bit6 shout pin_g7 pin_f2 shex bit28 strn sbyte sbin4 bin13 idec pin_h6 sub sdec9 busack bin30 continue dec6 sbin21 pin_j15 ibin20 ibin29 interrupt as hserial2_changebaud low isbin15 cf_read sbin24 isbin11 pin_b8 isdec3 isin bit2 lread ibin14 return i2cout hserin4 restore hrsout3ln hrsin6 cf_sector hrsout5 hrsout2ln pin_b11 sbin17 pin_a7 pin_e0 bycref code32 inkey pinset dround psv32 hbrestart3 hrsin5 config2 dceil pin_b0 psv16 pin_d13 for cwrite cstr isr_end cptr16 busout char bit22 bin1 pin_j12 ibin5 pulsein pin_f10 pin_k1 pin_k7 ncd ibin11 pin_j9 dec10 pin_f6 hserial4_changebaud bin11 ihex4 pin_h14 pop pin_g11 pin_k3 bit3 pin_k6
preprocessor=$sendhint _movffl _device $sendwarning $else _usb _ports _adc _uart $endif $if $ifneq $ifdef _pps $elseif _ram _code _pir3_txrx _eeprom $ifndef $senderror _block _flash $ifeq _adcres $eval $define _core $if $error _mssp $elif _xtal $defeval _defined $undef $sendmessage _ecore
# user definable keywords
user1=prm_9_bit available_ram usb_show_enum dma bank0_start hscl_pin onboard_uart lcd_data1_pin prm_10_bit usb_descriptor prm_8_bit stamp_sqr banka_end stack_start_address auto_variable_arrange bank9_end hrsin1_pin #ifnsym flash_capable hrsout1_pin hrsin5_pin #ifmacro- prm_7 #ifsym hserial1_rcsta hscl1_pin pulsin_maximum prm_28 bank4_end hserial_terminator hserial1_terminator bank4_start bank5_end all_digital hints prm_6_bit hrsout_pin float_display_type bank3_end bank5_start bank_select_switch prm_21 prm_19_bit hserial_spbrg hrsout4_pace rc5in_pin glcd_cs_invert prm_13 serial_baud usb_class_file lst_prm_type prm_29 #endifsym- hserial6_parity internal_font hserial2_terminator prm_1 bootloader stamp_sin #endifsym lcd_commandus lcd_rwpin prm_15 int_sub_end lcd_y_res prm_17_bit prm_16_bit create_coff #sym prm_22_bit rsout_mode page hpwm4_pin hsda_pin rsout_pin bank13_start #endif low_int_sub_start bank6_end prm_20_bit hrsout5_pin hrsout3_pin high_int_sub_start hrsout3_pace hscl2_pin #endifmacro- prm_15_bit set_bank hserial1_baud prm_4_bit xtal rsin_pin scl_pin reserve_ram adin_res hrsin6_pin prm_26_bit float_rounding prm_3 bank10_start hserial1_txsta lcd_type prm_18 hpwm10_pin config_start bank2_end lcd_data6_pin access bank8_end hrsin_pin bank12_end hrsin4_pin hbus1_bitrate hrsout_pace unhandled prm_24 slow_bus hpwm5_pin hserial2_txsta hpwm8_pin hserial3_baud ram_bank prm_19 #define asm- macro lcd_data7_pin prm_4 hpwm9_pin endasm- bank1_start button_delay ccp2_pin lcd_cs2pin lcd_dataus prm_12 hserial3_terminator lcd_data15_pin prm_23_bit xout_translate hrsout1_pace ccp5_pin prm_5_bit rsin_mode #ifmacro prm_12_bit touch_clkpin prm_31 #error lcd_enpin bank3_start onboard_usb optimiser_level lcd_data13_pin lcd_data2_pin bank15_end pll_req hserial_clear icd_req bank14_end int_sub_start mssp_type prm_30 show_all_bitnames bank8_start prm_32_bit #endifmacro stack_size hrsin2_pin prm_32 hpwm6_pin prm_25 lcd_rstpin lcd_interface auto_heap_strings hserial4_terminator lcd_graphic_pages prm_22 prm_30_bit lcd_x_res prm_1_bit hpwm7_pin lcd_dtpin hpwm1_pin prm_2_bit hserial1_clear hrsout5_pace #ifnsym- font_addr #while prm_count hserial4_baud ccp8_pin hserial6_clear hrsout6_pin hef_address lcd_cepin hrsin3_pin watchdog dead_code_remove hbus2_bitrate actual_banks high_int_sub_end core shift_delayus warnings hrsout2_pace prm_5 lcd_data8_pin lcd_data11_pin lcd_data0_pin ccp6_pin hserial2_baud lcd_data4_pin bank15_start prm_8 ccp1_pin bank7_start bank14_start low_int_sub_end hserial2_rcsta prm_27_bit stamp_cos hserial_txsta hef_size ccp10_pin rsout_baud prm_10 prm_17 tris_offset prm_13_bit return_type internal_bus prm_23 hserial_rcsta lcd_data3_pin prm_29_bit yram prm_2 touch_dinpin adin_tad lcd_dtport bank7_end lcd_wrpin hserial4_clear prm_11 serial_terminator prm_20 #undefine lcd_font_width lcd_data14_pin adin_stime ram_banks lcd_cs1pin endm bank1_end bank12_start hserial3_clear prm_6 reminders small_micro_model auto_context_save prm_28_bit hserial2_clear #if usb_self_power_pin usb_sense_pin hserial3_parity lcd_lines hrsout6_pace hpwm2_pin bank0_end lcd_rdpin hpwm3_pin lcd_ram_size prm_21_bit prm_7_bit glcd_fast_strobe #endw prm_16 serial_parity bank2_start touch_cspin lcd_data5_pin bank11_end ccp4_pin lcd_text_home_address asm heap hserial5_clear system #else #ifndef count_errors rsin_timeout prm_24_bit banka_start byte_math xin_translate keypad_port ccp7_pin hrsout2_pin hserial_terminator prm_18_bit prm_11_bit hrsout4_pin usbin_auto_poll endasm config_end macro- ccp3_pin hsda1_pin #disable hbus_bitrate touch_doutpin lcd_cdpin pulsein_maximum hserial2_parity ccp9_pin eeprom_size return_var #ifdef #ifsym- sda_pin prm_31_bit prm_27 auto_heap_arrays prm_26 prm_3_bit lcd_data10_pin prm_25_bit prm_14_bit prm_9 picmicro_pages reset_bank bank10_end hserial1_spbrg portb_pullups hserial5_parity bank9_start rsout_pace hserial4_parity lcd_font_height hserial2_spbrg lcd_rspin usbout_auto_poll lcd_data9_pin lcd_data12_pin bank6_start bank13_end hsda2_pin lcd_text_pages prm_14 hserial_baud exitm bank11_start variable single_page_micro onboard_adc #enable sonyin_pin pps_output pps_lock pll_setup pps_input osc_plldiv pps_unlock write_oscconh write_oscconl write_osccon
user2=blwth mov setc bn subwf bov movpag word_byte cpsne djnc dword_label bnz msbpost dword_bit mullw wreg_byte ior skpz byte_sdword lsrf wreg_float byte_dword negf movffl rcall brw bcf bnn word_dword addc config4l dword_word cpfseq return_wreg word_word word_label subfsr btst djz msbpost_l btss clrw config3h cp0 wreg_bit num_float retfie btsc btfss clrdc config5h addlw skpnc subfwb num_fsr lsbpre_l djnz return_word clrwdt msc sftac retlw bra skpnz subb byte_word config5l lsbpost_l cpslt ijnc msbpost_h msbpre config2h sl ijnz config4h decfsz bc lsbfirst_l bclr neg se skpdc rrc config6l comf ijc nop dword_wreg addwfc msbfirst subwfb input_pullup movff bk infsnz tblwt* xorlw tstfsz config1l cpfslt subr num_sfr config6h incf config7h clrf tblrd* num_byte tblwt+* float_float skpndc return_float msbpre_h bit_byte mul btfsc byte_wreg subbr dword_byte float_bit setf word_bit num_fsr1 config1h movlp float_wreg ff1l lcall movf cpseq lac sublw tblwtl num_word word_sdword xorwf tblrd*+ bit_word lsbpost movlb tblrdl tstf xor clr lsbfirst decf rrncf rrcf disi mac addfsr rrf float_dword return_dword clrc byte_bit tblwt*- andwf clrz rlc num_bit msbpre_l mdo num_fsr2 word_wreg ulnk dcfsnz num_fsr0 div msbfirst_h ijz movwf bnc byte_label bdc iorlw inc2 lsbpre_h andlw reset setz config2l mrepeat tblrdh fast bsf btg lsr cpfsgt lsl sr lsbfirst_h bz ret asr bit_bit tblwt*+ cp bset swapf float_byte return_byte mulwf lsbpost_h bit_dword dword_dword daw jump wreg_sword lslf config3l lgoto lfsr dword_float skpc return_sdword bit_wreg return_sbyte tblrd+* mpy bnov setdc cpsgt rlf byte_float return_sword addwf float_word movlw com movwi tblrd*- incfsz num_dword config7l add lnk sac lsbpre return_bit num_wreg ze wreg_sdword byte_sword djc wreg_dword word_float byte_byte bit_float wreg_word moviw rlcf rlncf iorwf msbfirst_l on_interrupt on_hardware_interrupt on_low_interrupt

[settings]
# default extension used when saving files
extension=Bas

# these characters define word boundaries when making selections and searching
# using word matching options
#wordchars=_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789

# single comments, like # in this file
comment_single='
# multiline comments
comment_open=(*
comment_close=*)

# set to false if a comment character/string should start at column 0 of a line, true uses any
# indentation of the line, e.g. setting to true causes the following on pressing CTRL+d
# 		#command_example();
# setting to false would generate this
# #		command_example();
# This setting works only for single line comments
comment_use_indent=true

# context action command (please see Geany's main documentation for details)
context_action_cmd=
lexer_filetype=FreeBasic

[indentation]
width=2
# 0 is spaces, 1 is tabs, 2 is tab & spaces
type=0

[build_settings]
# %f will be replaced by the complete filename
# %e will be replaced by the filename without extension
#compiler=fbc -w all "%f"
#run_cmd="./%e"

